% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_gbif.R
\name{get_gbif}
\alias{get_gbif}
\title{Query GBIF species occurrence records}
\usage{
get_gbif(
  gbif_key,
  t_path,
  aoa_wkt = NULL,
  gbif_user = NULL,
  gbif_pwd = NULL,
  gbif_email = NULL,
  gbif_format = "DWCA",
  crs = NULL,
  process_data = TRUE
)
}
\arguments{
\item{gbif_key}{The 22-digit GFIB key including hyphen for the data package.
Use "new" for new GBIF queries.}

\item{t_path}{The directory path where the GBIF data package is or will be
stored.}

\item{aoa_wkt}{Well-known text (wtk) string for the area of analysis. Use
\code{wkt_string()} to generate the wtk string. This is required when \emph{gbif_key}
is set to \strong{new}. Default is NULL.}

\item{gbif_user}{Your GBIF user name. This is required when \emph{gbif_key} is set
to \strong{new}. Default is NULL.}

\item{gbif_pwd}{Your GBIF password. This is required when \emph{gbif_key} is set
to \strong{new}. Default is NULL.}

\item{gbif_email}{Your GBIF email address. This is required when \emph{gbif_key}
is set to \strong{new}. Default is NULL.}

\item{gbif_format}{The format of the data returned from GBIF. Default is
Darwin-Core Achrive (DWAC). See \code{rgbif::occ_download()} for more details.}

\item{crs}{Target coordinate reference system (CRS). Either and
\code{sf::st_crs()} object or accepted input string (e.g. "NAD83").
See \code{sf::st_crs()} for more details. Default is NULL. If NULL,
resulting sf object CRS will be WGS84.}

\item{process_data}{Logical. Process data after reading them into R (TRUE ==
yes, FALSE == no). Default is TRUE. The processing step
\enumerate{
\item filters the data for species, subspecies, and varieties,
\item filters the data for present records,
\item filters against fossil records,
\item assembles clean scientific names (i.e., without authority) from the
genus, specific epithet, and infraspecific epithet, and
\item attempts to parse dates, day of year, and year values.
}}
}
\value{
An sf class object.
}
\description{
This function queries GBIF for species occurrence records for a given area,
or polygon (\code{sf} object), and then reads the data into R.
}
\details{
Additional details...
}
\examples{
## Not run:

library("mpsgSE")

# Read spatial data into R
t_path <- file.path("T:/path/to/project/directory")
gdb_path <- file.path(t_path, "GIS_Data.gdb")
sf_aoa <- read_fc(lyr = "AdminBdy_1kmBuffer", dsn = gdb_path, crs = "NAD83")

# New GBIF data query
gbif_dat <- get_gbif(gbif_key = 'new', 
                     t_path = file.path(t_path, "data"), 
                     aoa_wkt = wkt_string(sf_aoa),
                     gbif_user = Sys.getenv("GBIF_USER"),
                     gbif_pwd = Sys.getenv("GBIF_PWD"),
                     gbif_email = Sys.getenv("GBIF_EMAIL"), 
                     crs = 'NAD83')
                     
# Pull data from existing GBIF query
gbif_dat <- get_gbif(gbif_key = '9999999-999999999999999', 
                     t_path = file.path(t_path, "data"), 
                     crs = 'NAD83')

## End(Not run)                     
}
\seealso{
\code{\link[rgbif:download_predicate_dsl]{rgbif::pred_within()}}, \code{\link[rgbif:occ_download]{rgbif::occ_download()}},
\code{\link[rgbif:occ_download_wait]{rgbif::occ_download_wait()}}, \code{\link[rgbif:occ_download_get]{rgbif::occ_download_get()}},
\code{\link[rgbif:occ_download_import]{rgbif::occ_download_import()}}, \code{\link[sf:st_crs]{sf::st_crs()}}
}
