% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_functions.R
\name{clip_fc}
\alias{clip_fc}
\title{Clip feature class to polygon}
\usage{
clip_fc(sf_lyr, sf_clip, locale = NULL)
}
\arguments{
\item{sf_lyr}{Spatial (\code{sf}) object to be clipped.}

\item{sf_clip}{Polygon (\code{sf}) object used to clip.}

\item{locale}{Optional. Short description of clipped layer, usually the
location (e.g., forest acronym or "Buffer").}
}
\value{
An \link[sf:sf]{sf::sf} object
}
\description{
This function clips a \code{sf} object using \code{sf::st_intersection()}. First, this
function checks that the coordinate reference system (CRS) of the input
object is the same as the clipping object. If it is not, this function
transforms the clipping object to CRS of the input object using
\code{sf::st_transform()}before clipping. The output CRS is not changed.
}
\examples{
## Not run:

library("mpsgSE")

# Read spatial data into R
t_path <- file.path("T:/path/to/project/directory")
gdb_path <- file.path(t_path, "GIS_Data.gdb")
sf_plan_area <- read_fc(lyr = "PlanArea", dsn = gdb_path, crs = "NAD83")

# Pull data from existing GBIF query
gbif_dat <- get_gbif(gbif_key = '9999999-999999999999999', 
                     t_path = file.path(t_path, "data"))

# Convert to spatial object
gbif_sf <- gbif_spatial(gbif_dat, "NAD83")

# Clip to extents
unit_gbif <- clip_fc(gbif_sf, sf_plan_area)

## End (Not run)
}
\seealso{
\code{\link[sf:geos_binary_ops]{sf::st_intersection()}}, \code{\link[sf:st_transform]{sf::st_transform()}}
}
